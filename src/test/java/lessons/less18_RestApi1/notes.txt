Что такое given, when и then в тесте.
Многие серьезные инженеры из-за этих понятий rest assured всерьез не воспринимают.
Возможно вы уже сталкивались в такими штуками как cucumber, bdd, gherkin.
Есть такой подход в автоматизации тестирования, что можно немного извратить age object и сделать степы
    такого характера, что потом в тестовом классе не методы пишем, а текст, из которого стоится автотест. Этот
    синтаксис считается в некотором роде красивым и понятным

cucumber, bdd, gherkin.
    основная идея этих инструментов в том, что аналитики, менеджеры смогут писать автотесты, так как
    синтаксис типо лаконичный и понятный всем. На самом деле это обман и провокация, так как тесты должны разрабатывать
    инженеры по тестированию. И по факту все это bdd превращается в разработку еще одного ЯП.
    На небольших объемах тестов bdd смотрится еще нормально, но когда тестов переваливает за 100, то начинается
    архитектурный ад.

Согласно теории тестирования тест состоит их 3 частей: подготовка - действие - проверка.

И вот в кукумбере их немного переименовали в given - when - then. И REST Assured, к сожалению, унаследовал это себе.
    REST Assured задумывался как bdd френдли инструмент, но по факту это не так.

В given
    задаются всякие специфичные вещи (хедеры, данные авторизации, куки)


Если тесты упали в UI части, то проблема в фронтенде
Если упали API и UI тесты, то проблема на бэке