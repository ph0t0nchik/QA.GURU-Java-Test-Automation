//устанавливает язык проекта
plugins {
    id 'java-library'
    id ('io.qameta.allure') version '2.11.2'
}

allure{
    report{ //секция репорта
        version("2.19.0")
    }
    adapter{ //отвечает за появление папки с отчетами build/allure-results
        aspectjWeaver.set(true) //обработка аннотаций @Step
        frameworks {
            junit5 { //testng / junit4 / название фреймворка
                adapterVersion.set("2.19.0") //версия интеграции фреймворка и аллюра
            }
        }
    }
}

//хранилище всех библиотек для java
repositories {
    mavenCentral()
}

//какие библиотеки используем
dependencies {
    testImplementation(
            'org.junit.jupiter:junit-jupiter:5.10.1',
            'com.github.javafaker:javafaker:1.0.2',
            'com.codeborne:selenide:6.19.1',
            'org.slf4j:slf4j-simple:2.0.7',
            'io.qameta.allure:allure-selenide:2.19.0',
            'org.aeonbits.owner:owner:1.0.12',
            'org.assertj:assertj-core:3.25.3'
    )

}

//перекодирование всего кода тестов в формат UTF-8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

//test{ // можно убрать, переопределив выше
////    systemProperties "chromeoptions.prefs", "intl.accept_languages=en"  //запуск браузера на англ языке
//    useJUnitPlatform()
//}

task simple_test_less12(type: Test) {
    useJUnitPlatform{
        includeTags("simple")
    }
}

task remote_test(type: Test) {
    useJUnitPlatform {
        includeTags("remote")
    }
}

task property_test(type: Test) {
    useJUnitPlatform{
        includeTags("property")
    }
}

task hello_test(type: Test) {
    useJUnitPlatform {
        includeTags("hello")
    }
}

task owner_test(type: Test) {
    useJUnitPlatform{
        includeTags("owner")
    }
}

